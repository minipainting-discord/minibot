-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public."namedRoles"
(
    id smallint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 32767 CACHE 1 ),
    "roleId" character varying COLLATE pg_catalog."default",
    "shortName" character varying COLLATE pg_catalog."default",
    CONSTRAINT "namedRoles_pkey" PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."namedRoles"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."namedRoles" TO anon;

GRANT ALL ON TABLE public."namedRoles" TO authenticated;

GRANT ALL ON TABLE public."namedRoles" TO postgres;

GRANT ALL ON TABLE public."namedRoles" TO service_role;

GRANT ALL ON TABLE public."namedRoles" TO supabase_admin;

CREATE TABLE IF NOT EXISTS public.leaderboard
(
    "userId" character varying COLLATE pg_catalog."default" NOT NULL,
    year smallint NOT NULL,
    points integer NOT NULL,
    CONSTRAINT leaderboard_pkey PRIMARY KEY ("userId", year)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.leaderboard
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.leaderboard TO anon;

GRANT ALL ON TABLE public.leaderboard TO authenticated;

GRANT ALL ON TABLE public.leaderboard TO postgres;

GRANT ALL ON TABLE public.leaderboard TO service_role;

GRANT ALL ON TABLE public.leaderboard TO supabase_admin;

CREATE TABLE IF NOT EXISTS public.ranks
(
    id smallint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 32767 CACHE 1 ),
    "roleId" character varying COLLATE pg_catalog."default",
    "minPoints" integer,
    name character varying COLLATE pg_catalog."default",
    CONSTRAINT ranks_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.ranks
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.ranks TO anon;

GRANT ALL ON TABLE public.ranks TO authenticated;

GRANT ALL ON TABLE public.ranks TO postgres;

GRANT ALL ON TABLE public.ranks TO service_role;

GRANT ALL ON TABLE public.ranks TO supabase_admin;

CREATE TABLE IF NOT EXISTS public.users
(
    "userId" character varying COLLATE pg_catalog."default" NOT NULL,
    "displayName" character varying COLLATE pg_catalog."default" NOT NULL,
    "rankId" smallint,
    CONSTRAINT users_pkey PRIMARY KEY ("userId"),
    CONSTRAINT "users_rankId_fkey" FOREIGN KEY ("rankId")
        REFERENCES public.ranks (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.users
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.users TO anon;

GRANT ALL ON TABLE public.users TO authenticated;

GRANT ALL ON TABLE public.users TO postgres;

GRANT ALL ON TABLE public.users TO service_role;

GRANT ALL ON TABLE public.users TO supabase_admin;

CREATE TABLE IF NOT EXISTS public.settings
(
    id smallint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 32767 CACHE 1 ),
    "botMasterId" character varying COLLATE pg_catalog."default",
    "minCncPoints" smallint DEFAULT '10'::smallint,
    "cncRulesMessageId" character varying COLLATE pg_catalog."default",
    CONSTRAINT settings_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.settings
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.settings TO anon;

GRANT ALL ON TABLE public.settings TO authenticated;

GRANT ALL ON TABLE public.settings TO postgres;

GRANT ALL ON TABLE public.settings TO service_role;

GRANT ALL ON TABLE public.settings TO supabase_admin;

COMMENT ON TABLE public.settings
    IS 'General bot settings';

CREATE TABLE IF NOT EXISTS public."pointRequests"
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "userId" character varying COLLATE pg_catalog."default" NOT NULL,
    "requestMessageId" character varying COLLATE pg_catalog."default" NOT NULL,
    cleared boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    "actionMessageId" character varying COLLATE pg_catalog."default",
    CONSTRAINT "pointRequests_pkey" PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."pointRequests"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."pointRequests" TO anon;

GRANT ALL ON TABLE public."pointRequests" TO authenticated;

GRANT ALL ON TABLE public."pointRequests" TO postgres;

GRANT ALL ON TABLE public."pointRequests" TO service_role;

GRANT ALL ON TABLE public."pointRequests" TO supabase_admin;

CREATE TABLE IF NOT EXISTS public."namedChannels"
(
    id smallint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 32767 CACHE 1 ),
    "channelId" character varying COLLATE pg_catalog."default",
    "shortName" character varying COLLATE pg_catalog."default",
    CONSTRAINT "namedChannels_pkey" PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."namedChannels"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."namedChannels" TO anon;

GRANT ALL ON TABLE public."namedChannels" TO authenticated;

GRANT ALL ON TABLE public."namedChannels" TO postgres;

GRANT ALL ON TABLE public."namedChannels" TO service_role;

GRANT ALL ON TABLE public."namedChannels" TO supabase_admin;

CREATE TABLE IF NOT EXISTS public."managedRoles"
(
    id smallint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 32767 CACHE 1 ),
    "roleId" character varying COLLATE pg_catalog."default" NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    description character varying COLLATE pg_catalog."default",
    "createdBy" character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "managedRoles_pkey" PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."managedRoles"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."managedRoles" TO anon;

GRANT ALL ON TABLE public."managedRoles" TO authenticated;

GRANT ALL ON TABLE public."managedRoles" TO postgres;

GRANT ALL ON TABLE public."managedRoles" TO service_role;

GRANT ALL ON TABLE public."managedRoles" TO supabase_admin;

CREATE OR REPLACE VIEW public.lifetime
 AS
 SELECT leaderboard."userId",
    sum(leaderboard.points) AS points
   FROM leaderboard
  GROUP BY leaderboard."userId";

ALTER TABLE public.lifetime
    OWNER TO supabase_admin;

GRANT ALL ON TABLE public.lifetime TO anon;
GRANT ALL ON TABLE public.lifetime TO postgres;
GRANT ALL ON TABLE public.lifetime TO supabase_admin;
GRANT ALL ON TABLE public.lifetime TO authenticated;
GRANT ALL ON TABLE public.lifetime TO service_role;
