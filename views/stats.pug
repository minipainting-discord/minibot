extends layout.pug

block footer

block content
  script(src="https://cdn.jsdelivr.net/npm/echarts@4.5.0/dist/echarts.min.js")
  script(src="https://unpkg.com/dayjs")
  section.stats
    h2 Server Stats
    #chart(style="width: 100%; height: 400px; background: white;")

  script
    | const stats = !{JSON.stringify(stats)}
    :cdata-js
      const chart = echarts.init(document.getElementById("chart"))
      const groupBy = (xs, key) => {
        return xs.reduce((rv, x) => {
          (rv[x[key]] = rv[x[key]] || []).push(x)
          return rv
        }, {})
      }
      const statsByChannel = groupBy(stats, 'channelName')
      const channelNames = Object.keys(statsByChannel).sort()
      const options = {
        title: {
          text: "msg/day (last 30 days)"
            },
            tooltip: {},
            legend: {
              data: channelNames,
            },
            xAxis: {
              data: Array.from({length: 30}, (_, i) => dayjs().subtract(29 - i, 'days').format("MM/DD"))
            },
            yAxis: {},
            series: channelNames.map(channelName => ({
              name: channelName,
              type: "line",
              step: "middle",
              data: Array.from({length: 30}, (_, i) => {
                const d = dayjs().subtract(29 - i, 'days')
                const cs = statsByChannel[channelName].find(cs => cs.year === d.year() && cs.month - 1 === d.month() && cs.day === d.date())
                return cs ? cs.dailyCount : null
              })
            }))
        }

        // use configuration item and data specified to show chart
        chart.setOption(options);


  style
    .
      .stats > h2 {
        text-transform: uppercase;
        font-weight: lighter;
      }
